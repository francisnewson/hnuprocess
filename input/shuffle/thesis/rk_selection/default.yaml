scaling:
    - scaling_method:
        strategy: m2
        name: mc_pos
        peakname: km2

        channels:
            halo_channels:
                - p6.data.kless.q11t.v2.pos
                - p6.data.km.q11t.v2.pos

            data_channels:
                - p5.data.q11t.v3.pos

            peak_channels:
                - p5.km2.v2.pos

        halo: &scale
            strategy: m2
            input_file: tdata/rk_selection/all.rk_selection.root
            plot_path: km2_rk_full/h_m2m_kmu

            min_mass_halo: -0.3
            max_mass_halo: -0.075
            min_mass_peak: -0.02
            max_mass_peak:  0.01

        mc: *scale

    - scaling_method:
        strategy: m2
        name: mc_neg
        peakname: km2

        channels:
            halo_channels:
                - p6.data.km.q11t.v2.neg

            data_channels:
                - p5.data.q11t.v3.neg

            peak_channels:
                - p5.km2.v2.neg

        halo: *scale

        mc: *scale

weights:
    fid_file: use_root
    root_file: "tdata/rk_selection/all.rk_selection.root"
    pre : ""
    post: "sample_burst_count/bursts"
    branch:  "weight"

mass_windows:
    method: params
    x0: 0.390
    res0: 0.0035
    offset: 0

output_list:
    - {
    blinding: { do_blind: false },

    input_file: tdata/rk_selection/all.rk_selection.root,

    plots: [{path: km2_rk_full/h_m2m_kmu, name: full_km2/h_m2m, rebin: 10} ],

    data_plot: {
        channels: [ p5.data.q11t.v3.pos,  p5.data.q11t.v3.neg ]
        },

    stack: [ 

        item: &ke3pos { name: ke3_pos, scaling: mc_pos, type: ke3,
            fid_weight: p5.ke3.v2.pos, channels: [ p5.ke3.v2.pos] },

        item: &ke3neg { name: ke3_neg, scaling: mc_neg, type: ke3,
            fid_weight: p5.ke3.v2.neg, channels: [ p5.ke3.v2.neg ] },

        item: &km3pos { name: km3_pos, scaling: mc_pos, type: km3,
            fid_weight: p5.km3.v2.pos, channels: [ p5.km3.v2.pos ] },

         item: &km3neg { name: km3_neg, scaling: mc_neg, type: km3,
            fid_weight: p5.km3.v2.neg, channels: [ p5.km3.v2.neg ] },

        item: &k3pipos { name: k3pi_pos, scaling: mc_pos, fid_weight: p5.k3pi.v2.pos,
            type: k3pi, channels: [ p5.k3pi.v2.pos ] },

        item: &k3pineg { name: k3pi_neg, scaling: mc_neg, fid_weight: p5.k3pi.v2.neg,
            type: k3pi, channels: [ p5.k3pi.v2.neg ] },

        item: &k2pigpos { name: k2pig_pos, scaling: mc_pos, type: k2pi,
        fid_weight: p5.k2pig.v2.pos, channels: [ p5.k2pig.v2.pos ] },

        item: &k2pigneg { name: k2pig_neg, scaling: mc_neg, type: k2pi,
            fid_weight: p5.k2pig.v2.neg, channels: [ p5.k2pig.v2.neg ] },

        item: &halopos { name: halo_pos, scaling: mc_pos, type: halo, errors: [ halo_scale ] ,
            channels: [ p6.data.kless.q11t.v2.pos, p6.data.km.q11t.v2.pos ] },

        item: &haloneg { name: halo_neg, scaling: mc_neg, type: halo, errors: [ halo_scale ], 
            channels: [ p6.data.km.q11t.v2.neg] },

        item: &km2pos { name: km2_pos, scaling: mc_pos, fid_weight: p5.km2.v2.pos, type: km2,
            channels: [ p5.km2.v2.pos ] },

        item: &km2neg { name: km2_neg, scaling: mc_neg, fid_weight: p5.km2.v2.neg, type: km2,
            channels: [ p5.km2.v2.neg ] }
            ]
        }

    - {
    blinding: { do_blind: false },

    input_file: tdata/rk_selection/all.rk_selection.root,

    plots: [{path: km2_rk_full/h_m2m_kmu, name: full_km2_pos/h_m2m, rebin: 10} ],

    data_plot: {
        channels: [ p5.data.q11t.v3.pos] 
        },

    stack: [
        item: *ke3pos,
        item: *km3pos,
        item: *k3pipos,
        item: *k2pigpos,
        item: *halopos,
        item: *km2pos ]
        }

    - {
    blinding: { do_blind: false },

    input_file: tdata/rk_selection/all.rk_selection.root,

    plots: [{path: km2_rk_full/h_m2m_kmu, name: full_km2_neg/h_m2m, rebin: 10} ],

    data_plot: {
        channels: [ p5.data.q11t.v3.neg] 
        },

    stack: [
        item: *ke3neg,
        item: *km3neg,
        item: *k3pineg,
        item: *k2pigneg,
        item: *haloneg,
        item: *km2neg ]
        }
